{
    "meta": {
        "lastFetchedData": "2021-03-16T15:00:03Z",
        "numberOfThreads": 1,
        "numberofTweets": 6,
        "totalMetrics": {
            "retweet_count": 6,
            "reply_count": 0,
            "like_count": 6,
            "quote_count": 0
        }
    },
    "threads": [
        {
            "conversation": "1368551099846770689",
            "numberOfTweets": 6,
            "slug": "js-looping-over-arrays",
            "tweets": [
                {
                    "id": "1368551099846770689",
                    "media": [
                        {
                            "media_key": "3_1368551096126410752",
                            "type": "photo",
                            "url": "https://pbs.twimg.com/media/Ev4R-JWWEAAxfyp.jpg"
                        }
                    ],
                    "text": "üü° JS: Looping over Arrays üü° \n\nLooping over arrays is such a massive part of handling data in JavaScript that I wanted to cover some of the most common methods of doing so in this thread. \n\nLet me know your favourite üí¨ 1/7\n--\n#100DaysOfCode #JavaScript #developers ",
                    "date": "2021-03-07T13:16:23.000Z",
                    "position": 1
                },
                {
                    "id": "1368551101109264384",
                    "media": [
                        {
                            "media_key": "3_1368551096160026628",
                            "type": "photo",
                            "url": "https://pbs.twimg.com/media/Ev4R-JeXAAQsL0q.jpg"
                        }
                    ],
                    "text": "1Ô∏è‚É£ For Loop\n\nThe for loop is one of the fundamentals of the language due to its versatility. It's no different when it comes to looping over an array.\n\nThe for loop works by creating a variable and incrementing it while a condition is true, we then access the index. 2/7 ",
                    "date": "2021-03-07T13:16:23.000Z",
                    "position": 2
                },
                {
                    "id": "1368551102363426817",
                    "media": [
                        {
                            "media_key": "3_1368551096160034819",
                            "type": "photo",
                            "url": "https://pbs.twimg.com/media/Ev4R-JeXIAMIXVg.jpg"
                        }
                    ],
                    "text": "2Ô∏è‚É£ While Loop\n\nA slightly more unusual way of looping through arrays is the while loop. \n\nSimilar to the for loop, the while loop will loop while a condition is true but unlike a for loop, it doesn't have a pre-determined end and instead will go forever while true. 3/7 ",
                    "date": "2021-03-07T13:16:23.000Z",
                    "position": 3
                },
                {
                    "id": "1368551103621693443",
                    "media": [
                        {
                            "media_key": "3_1368551096134799361",
                            "type": "photo",
                            "url": "https://pbs.twimg.com/media/Ev4R-JYWEAE12Ko.jpg"
                        }
                    ],
                    "text": "3Ô∏è‚É£ .forEach()\n\nMore recently introduced to the language, the .forEach() method is built into the Array.prototype and allows for us to directly loop over an array without calling a loop explicitly.\n\nIn fact, it actually uses loops underneath but just makes the syntax simpler. 4/7 ",
                    "date": "2021-03-07T13:16:24.000Z",
                    "position": 4
                },
                {
                    "id": "1368551104875802633",
                    "media": [
                        {
                            "media_key": "3_1368551096160026629",
                            "type": "photo",
                            "url": "https://pbs.twimg.com/media/Ev4R-JeXAAUfLP9.jpg"
                        }
                    ],
                    "text": "4Ô∏è‚É£ .map()\n\n.map() is actually very similar to .forEach() with one key difference. \n\nWhen using .forEach() we can only iterate through the array and not return anything. But, when we use .map() we can return values from the callback function as shown in the üñºÔ∏è. 5/7 ",
                    "date": "2021-03-07T13:16:24.000Z",
                    "position": 5
                },
                {
                    "id": "1368551106159198208",
                    "text": "üë§ My Favourite\n\nPersonally, I always go for the .map() or .forEach() method depending on the situation, in general, I've moved away from traditional loops when it comes to looping through an array.\n\nHow about you? üí¨ 6/7",
                    "date": "2021-03-07T13:16:24.000Z",
                    "position": 6
                }
            ],
            "date": "2021-03-07T13:16:24.000Z",
            "meta": {
                "metrics": {
                    "retweet_count": 6,
                    "reply_count": 0,
                    "like_count": 6,
                    "quote_count": 0
                }
            },
            "position": 1
        }
    ]
}